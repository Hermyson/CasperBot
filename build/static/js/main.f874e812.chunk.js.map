{"version":3,"sources":["assets/Chatbot.jpg","services/firebaseConfig.js","pages/Login/index.js","assets/delete.svg","assets/pencil.svg","pages/Dashboard/index.js","routes/AppRoutes.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","getAuth","Login","useState","email","setEmail","password","setPassword","auth","navigate","useNavigate","className","src","icon","alt","type","name","id","placeholder","onChange","e","target","value","onClick","preventDefault","signInWithEmailAndPassword","then","userCredential","user","localStorage","setItem","JSON","stringify","console","log","window","location","reload","catch","error","alert","message","Modal","setAppElement","Dashboard","modalIsOpen","setModalIsOpen","imageUrl","setImageUrl","title","setTitle","description","setDescription","theme","setTheme","link","setLink","users","setUsers","iden","setInden","userCollectionRef","collection","handleSubmit","event","a","addDoc","docRef","userDoc","doc","deleteDoc","useEffect","getDocs","data","docs","map","getNoticias","scope","handleDelete","trash","document","getElementById","style","display","edit","hidden","htmlFor","selected","disabled","setDoc","handleEdit","isOpen","onSubmit","AppRoutes","path","element","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f874e812.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Chatbot.8a665bca.jpg\";","\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDYXWcM6dGftoDOwpJ0IdngQA2F503lp-M\",\n  authDomain: \"casperbotnoticias.firebaseapp.com\",\n  projectId: \"casperbotnoticias\",\n  storageBucket: \"casperbotnoticias.appspot.com\",\n  messagingSenderId: \"604306548116\",\n  appId: \"1:604306548116:web:dd09ff7cdcaf0d4338db81\"\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\n\n\n","import React,{ useState} from 'react';\nimport icon from '../../assets/Chatbot.jpg';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth'\nimport { app } from \"../../services/firebaseConfig\";\nimport { useNavigate } from 'react-router-dom';\n//import { AuthContext } from '../../context/AuthContext';\nimport \"./styles.css\";\n\n\n\n\n\nfunction Login () {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const auth = getAuth(app);\n\n    const navigate = useNavigate();\n    //const {dispatch} = useContext(AuthContext);\n\n    function handleSignIn(e){\n        e.preventDefault();\n\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                \n                const user = userCredential.user;\n                localStorage.setItem(\"@firebase:user\", JSON.stringify(user));\n\n                //dispatch({type:\"LOGIN\", payload:user})\n                navigate(\"../Dashboard\")\n\n                console.log(\"ok!\");\n                window.location.reload(false);\n            })\n            .catch((error) => {\n                alert(\"Usuário ou senha incorreta\");\n                console.log(error.message)\n            });\n    }\n    \n    return (\n        <div className=\"container\">\n            <div className=\"content\">\n                <img src={ icon } alt=\"logo\"></img>\n                <h2>Casperbot Gerencie Notícias</h2>\n                \n                <h1>Por favor digite suas informações de login</h1>\n                                            \n                <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"usuario@email.com\" onChange={e => setEmail(e.target.value)}/>          \n                        \n                <input type=\"password\" name='password' id='password' placeholder=\"digite sua senha\" onChange={e => setPassword(e.target.value)}/>  \n            \n                <button className=\"yellow-button\" onClick={handleSignIn} type=\"submit\">Login</button>\n               \n            </div>\n            \n        </div>\n        \n\n    );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/delete.d9483b20.svg\";","export default __webpack_public_path__ + \"static/media/pencil.d02b69b2.svg\";","import React, { useEffect, useState } from 'react';\nimport { addDoc, collection, getDocs,doc ,deleteDoc, setDoc} from \"firebase/firestore\"\nimport { db } from \"../../services/firebaseConfig\";\nimport Modal from 'react-modal';\nimport trash from '../../assets/delete.svg';\nimport edit from '../../assets/pencil.svg';\nimport \"./styles.css\";\nimport '../../global.css';\nimport { useNavigate } from 'react-router-dom';\n\n\nModal.setAppElement('#root');\n\nfunction Dashboard() {\n    \n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [imageUrl, setImageUrl] = useState('');\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [theme, setTheme] = useState('');\n    const [link, setLink] = useState('');\n    const [users, setUsers] = useState([]);\n    const [iden, setInden] = useState(\"\");\n    \n\n    const navigate = useNavigate();\n\n    const userCollectionRef = collection(db,\"noticia\");\n\n    \n    const handleSubmit = async(event) =>{\n        event.preventDefault();\n        \n        try{\n        const docRef = await addDoc(collection(db, \"noticia\"), {\n            imageUrl,\n            title,\n            description,\n            theme,\n            link\n          });\n\n          alert(\"Dados adicionado com sucesso!\", docRef)\n          navigate(setModalIsOpen (false))\n        }catch(event){\n            console.error(\"Error adding document! \",event);\n        } \n       \n    } \n    \n        \n    useEffect(() => {\n        const getNoticias = async () => {\n        const data = await getDocs(userCollectionRef);\n        setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n        };\n        getNoticias();\n    }, [userCollectionRef]);\n\n    async function handleDelete(id) {\n\n        const userDoc = doc(db, \"noticia\",id);\n        await deleteDoc(userDoc);\n        alert(\"Deletado com Sucesso\")\n            \n    }\n    function handleUpdate(id){\n        document.getElementById('edt').style.display = 'block'\n        const num = id\n        setInden(num)\n    }\n\n\n\n    function handleEdit(id){\n        const userDoc = doc(db,\"noticia\",id);\n        const docRef = {\n            imageUrl: imageUrl,\n            title: title,\n            description: description,\n            theme: theme,\n            link: link\n        };\n        setDoc(userDoc, docRef)\n            .then(userDoc =>{\n                alert(\"Dados alterado com sucesso!\");\n            })\n           \n     }  \n     function exit(){\n        navigate ('../') \n     }\n    \n    \n    return (\n        <div className=\"table\">\n           <h3>Notícias cadastradas</h3>\n           <table>\n            \n                <tr>\n                    <th scope=\"col\">Imagem</th>\n                    <th scope=\"col\">Título</th>\n                    <th scope=\"col\">Descrição</th>\n                    <th scope=\"col\">Tema</th>\n                    <th scope=\"col\">Link</th>\n                    <th scope=\"col\">Delete</th>\n                    <th scope=\"col\">Edit</th>\n                </tr>\n                \n            \n               {users.map((docRef) =>{\n                return(\n                    <tr>\n                        <td>{docRef.imageUrl}</td>\n                        <td>{docRef.title}</td>\n                        <td>{docRef.description}</td>\n                        <td>{docRef.theme}</td>\n                        <td>{docRef.link}</td>\n                        <td><button id='trash' onClick={() => { handleDelete(docRef.id)}}><img src={trash} alt=\"trash\"></img></button></td>\n                        <td><button id='edit' onClick={()=> {handleUpdate(docRef.id)}}><img src={edit} alt=\"edit\"></img></button></td>\n                     \n                    </tr> \n                )\n               })}  \n                  \n            </table>\n           \n\n            <div id=\"edt\" hidden>\n            \n                <h2>Editar Notícia</h2>\n                <br/>\n                <p>Todos os campos devem ser preenchido!</p>\n                <br/>\n                <form > \n                        <label htmlFor=\"imageUrl\">Url da imagem</label>\n                        <input \n                            id=\"imageUrl\" \n                            value={imageUrl} \n                            onChange={event => setImageUrl(event.target.value)}\n                            \n                        />\n\n                        <label htmlFor=\"title\">Título</label>\n                        <input \n                            id=\"title\" \n                            value={title} \n                            onChange={event => setTitle(event.target.value)}\n                        />\n\n                        <label htmlFor=\"description\">Descrição</label>\n                        <input \n                            id=\"description\" \n                            value={description} \n                            onChange={event => setDescription(event.target.value)}\n                        />\n\n\n                        <label htmlFor=\"theme\">Tema</label>\n                        \n                        <select \n                            id=\"theme\" \n                            selected=\"Esportes\"\n                            value={theme} \n                            onChange={event => setTheme(event.target.value)}>\n                                <option value=\"\" selected disabled hidden>Escolha um tema</option>\n                                <option value=\"Esportes\">Esportes</option>\n                                <option value=\"Entretenimento\">Entretenimento</option>\n                                <option value=\"Famosos\">Famosos</option>\n                                <option value=\"Política\">Política</option>\n                        </select>\n\n                        <label htmlFor=\"link\">Link para notícia</label>\n                        <input \n                            id=\"link\" \n                            value={link} \n                            onChange={event => setLink(event.target.value)}\n                        />\n                        <br/>\n                        <br/>\n                        <div >\n                           \n                            <button className=\"yellow-button\" type=\"submit\" onClick={() => handleEdit(iden)}>Editar Notícia</button>\n                                                 \n                        </div>  \n                </form>\n            \n            </div>                           \n                         \n                \n                <button className=\"yellow-button\" id=\"new-post\" onClick={() => {setModalIsOpen(true)}}>Nova notícia</button>\n                <button className=\"yellow-button\" id=\"sair\" onClick={() => exit()}>Sair</button>\n                <Modal isOpen={modalIsOpen} id=\"create-modal\">\n                    <form onSubmit={handleSubmit}> \n                            <label htmlFor=\"imageUrl\">Url da imagem</label>\n                            <input \n                                id=\"imageUrl\" \n                                value={imageUrl} \n                                onChange={event => setImageUrl(event.target.value)}\n                                \n                            />\n\n                            <label htmlFor=\"title\">Título</label>\n                            <input \n                                id=\"title\" \n                                value={title} \n                                onChange={event => setTitle(event.target.value)}\n                            />\n\n                            <label htmlFor=\"description\">Descrição</label>\n                            <input \n                                id=\"description\" \n                                value={description} \n                                onChange={event => setDescription(event.target.value)}\n                            />\n\n\n                            <label htmlFor=\"theme\">Tema</label>\n                            \n                            <select \n                                id=\"theme\" \n                                selected=\"Esportes\"\n                                value={theme} \n                                onChange={event => setTheme(event.target.value)}>\n                                    <option value=\"\" selected disabled hidden>Escolha um tema</option>\n                                    <option value=\"Esportes\">Esportes</option>\n                                    <option value=\"Entretenimento\">Entretenimento</option>\n                                    <option value=\"Famosos\">Famosos</option>\n                                    <option value=\"Política\">Política</option>\n                            </select>\n\n                            <label htmlFor=\"link\">Link para notícia</label>\n                            <input \n                                id=\"link\" \n                                value={link} \n                                onChange={event => setLink(event.target.value)}\n                            />\n                        <div>\n                            \n                            <button className=\"yellow-button\" type=\"submit\" >Cadastrar</button>\n                        \n                            <button className=\"yellow-button\" id=\"close-button\" onClick={() => setModalIsOpen (false)}>Fechar</button>\n                            \n                        </div>  \n                    </form>         \n                                 \n                </Modal>\n            </div>\n    );\n}\nexport default Dashboard;","import React from 'react';\nimport { BrowserRouter, Routes, Route} from 'react-router-dom';\nimport Login from '../pages/Login';\nimport Dashboard from '../pages/Dashboard';\n//import { AuthContext } from '../context/AuthContext';\n\n\nexport default function AppRoutes() {\n    \n    //const {currentUser} = useContext(AuthContext)\n    \n  \n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/\" element={ <Login/> } />\n                <Route path=\"/dashboard\" element={< Dashboard/>} />\n                \n                \n            </Routes>\n        </BrowserRouter>\n    )\n}","import \"./global.css\";\nimport Routes from './routes/AppRoutes';\n\nfunction App() {\n  return (\n    <Routes/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}